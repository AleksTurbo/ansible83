---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
      - name: "Get {{ clickhouse_packages | flatten(l) }} distrib" 
        ansible.builtin.get_url:
          url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
          dest: "./{{ item }}-{{ clickhouse_version }}.rpm" 
        with_items: "{{ clickhouse_packages }}"
        check_mode: false
      rescue:
      - name: Get clickhouse  {{ clickhouse_packages_cmn }} distrib
        ansible.builtin.get_url:
          url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
          dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
        with_items: "{{ clickhouse_packages_cmn }}"
        check_mode: false
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true
      notify: Start clickhouse service
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    - name: Clickhouse | Config
      become: true
      ansible.builtin.template:
        src: templates/clickhouse.xml.j2
        dest: /etc/clickhouse-server/config.xml
        mode: 0644
      notify: Start clickhouse service
    - name: pause for 10 second(s)
      ansible.builtin.pause:
        seconds: 10
    - name: Clickhouse | Create database
      ansible.builtin.command: "clickhouse-client -h {{ clickhouse_host }} -q 'create database {{ clickhouse_database_name }};'"
      register: create_db 
      failed_when: create_db.rc != 0 and create_db.rc !=82 
      changed_when: create_db.rc == 0
    - name: Clickhouse | Create log table
      ansible.builtin.command:
        argv:
          - clickhouse-client
          - -h
          - "{{ clickhouse_host }}"
          - --database
          - "{{ clickhouse_database_name }}"
          - -q
          - "CREATE TABLE IF NOT EXISTS  {{ clickhouse_table_name }} (timestamp String, file String, host String, message String, source_type String) ENGINE = Log;"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=57
      changed_when: create_table.rc == 0